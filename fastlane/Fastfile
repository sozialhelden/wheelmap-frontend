# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# update_fastlane

# default_platform(:ios)

xcodeproj = "platforms/ios/Wheelmap.xcodeproj"


platform :ios do
  desc "Push a new beta build to TestFlight and HockeyApp"
  lane :beta do
    # ensure_git_branch branch: 'master'
    match(type: "appstore")
    # increment_version_number_in_plist(xcodeproj: xcodeproj)
    # increment_build_number_in_plist(xcodeproj: xcodeproj)
    # commit_version_bump(xcodeproj: xcodeproj)
    # push_to_git_remote
    cordova(platform: 'ios')
    commit_version_bump(xcodeproj: xcodeproj, include: %w[package.json config.xml platforms/ios/Wheelmap/Wheelmap-Info.plist platforms/ios/Wheelmap/config.xml])
    zip(
      path: "platforms/ios/build/device/Wheelmap.app.dSYM",
      output_path: "platforms/ios/build/device/Wheelmap.app.dSYM.zip",
      verbose: false
    )
    hockey(
      api_token: ENV["HOCKEY_API_TOKEN_IOS"],
      ipa: 'platforms/ios/build/device/Wheelmap.ipa'
    )
    upload_to_testflight(
      ipa: './platforms/ios/build/device/Wheelmap.ipa'
    )
    slack(
      message: "Pushed a beta build to Testflight and HockeyApp! You can be a beta tester by opening the URL below on your iPhone/iPad, or by registering as beta tester with your email address.",
      username: "buildbot",
      channel: "#wheelmap",  # Optional, by default will post to the default channel configured for the POST URL.
      success: true, # Optional, defaults to true.
      payload: {  # Optional, lets you specify any number of your own Slack attachments.
        "App download URL" => lane_context[SharedValues::HOCKEY_DOWNLOAD_LINK],
        "Version" => JSON.parse(IO.read("../package.json"))["version"],
      },
      default_payloads: [:git_branch, :git_author], # Optional, lets you specify a whitelist of default payloads to include. Pass an empty array to suppress all the default payloads.
            # Don't add this key, or pass nil, if you want all the default payloads. The available default payloads are: `lane`, `test_result`, `git_branch`, `git_author`, `last_git_commit_message`, `last_git_commit_hash`.
      attachment_properties: { # Optional, lets you specify any other properties available for attachments in the slack API (see https://api.slack.com/docs/attachments).
          # This hash is deep merged with the existing properties set using the other properties above. This allows your own fields properties to be appended to the existing fields that were created using the `payload` property for instance.
      }
    )
  end
end

platform :android do
  # def increment_version_code(gradle_build)
  #   sh %Q{cd ../ && echo "$(awk '{sub(/versionCode [[:digit:]]+$/,"versionCode "$2+1)}1' #{gradle_build})" > #{gradle_build} && cd -}
  # end

  desc "Push a new alpha build to Google Play Store"
  lane :beta do
    # increment_version_code gradle_build: 'platforms/android/app/build.gradle'
    # commit_version_bump(xcodeproj: xcodeproj)
    # commit_version_bump(xcodeproj: xcodeproj, include: %w[package.json])
    # push_to_git_remote

    cordova(
      platform: 'android',
      keystore_path: '../certificates/keystores/sozialhelden.keystore',
      keystore_alias: 'sozialhelden',
      keystore_password: ENV["ANDROID_KEYSTORE_PASSWORD"]
      )

    apk_file_name = './platforms/android/app/build/outputs/apk/release/app-release.apk';
    commit_version_bump(xcodeproj: xcodeproj, include: %w[package.json config.xml platforms/android/app/src/main/AndroidManifest.xml platforms/android/app/src/main/res/xml/config.xml])
    ensure_git_status_clean
    hockey(
      api_token: ENV["HOCKEY_API_TOKEN_ANDROID"],
      apk: apk_file_name,
      )
    supply(apk: apk_file_name, track: 'beta', package_name: 'org.wheelmap.android.online')
    slack(
      message: "Android beta successfully released to Play Store and HockeyApp! You can be a beta tester by opening <https://play.google.com/apps/testing/org.wheelmap.android.online> on your Android phone (Note that the build can appear with a delay), or by directly downloading the APK below onto your device.",
      username: "buildbot",
      slack_url: ENV["SLACK_URL"],
      channel: "#wheelmap",  # Optional, by default will post to the default channel configured for the POST URL.
      success: true, # Optional, defaults to true.
      payload: {  # Optional, lets you specify any number of your own Slack attachments.
        "App download URL" => lane_context[SharedValues::HOCKEY_DOWNLOAD_LINK],
        "Version" => JSON.parse(IO.read("../package.json"))["version"],
      },
      default_payloads: [:git_branch, :git_author], # Optional, lets you specify a whitelist of default payloads to include. Pass an empty array to suppress all the default payloads.
            # Don't add this key, or pass nil, if you want all the default payloads. The available default payloads are: `lane`, `test_result`, `git_branch`, `git_author`, `last_git_commit_message`, `last_git_commit_hash`.
      attachment_properties: { # Optional, lets you specify any other properties available for attachments in the slack API (see https://api.slack.com/docs/attachments).
          # This hash is deep merged with the existing properties set using the other properties above. This allows your own fields properties to be appended to the existing fields that were created using the `payload` property for instance.
      }
    )
  end
end
